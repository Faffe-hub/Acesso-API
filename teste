<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ATIVIDADE PRÁTICA DE ACESSO API</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 350px;
        }
        h1 {
            font-size: 24px;
            color: #333;
        }
        input[type="email"], input[type="password"] {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        #message {
            margin-top: 15px;
            color: red;
            font-size: 14px;
        }
        #dataDisplay {
            margin-top: 20px;
            text-align: left;
            width: 100%;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>ATIVIDADE PRÁTICA DE ACESSO API</h1>
        
        <form id="loginForm">
            <input type="email" id="email" name="email" placeholder="Digite seu email" required>
            <input type="password" id="password" name="password" placeholder="Digite sua senha" required>
            <button type="submit">Login</button>
        </form>

        <p id="message"></p>
        <div id="dataDisplay"></div>
    </div>

    <script>
        document.getElementById('loginForm').addEventListener('submit', async function(event) {
            event.preventDefault();  // Impede o envio padrão do formulário

            // Captura os valores inseridos pelo usuário
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            try {
                // Faz a requisição POST para o endpoint de login
                const response = await fetch('http://137.184.108.252:5000/api/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        email: email,
                        password: password
                    })
                });

                const data = await response.json();

                // Verifica se a resposta foi bem-sucedida
                if (response.ok) {
                    console.log('Token recebido:', data.token);
                    document.getElementById('message').innerText = 'Login realizado com sucesso!';

                    // Exibe o token
                    displayToken(data.token);

                    // Agora que temos o token, vamos buscar as cidades
                    await fetchCities(data.token);
                } else {
                    // Exibe uma mensagem de erro caso o login falhe
                    document.getElementById('message').innerText = 'Erro no login: ' + data.message;
                }
            } catch (error) {
                console.error('Erro na requisição:', error);
                document.getElementById('message').innerText = 'Erro na requisição: ' + error.message;
            }
        });

        async function fetchCities(token) {
            try {
                const response = await fetch('http://137.184.108.252:5000/api/cidades', {
                    method: 'GET',
                    headers: {
                        'x-access-token': token  // Inclui o token no cabeçalho
                    }
                });

                const cities = await response.json();

                // Exibe a lista de cidades
                if (response.ok) {
                    displayCities(cities);
                } else {
                    document.getElementById('message').innerText = 'Erro ao buscar cidades: ' + cities.message;
                }
            } catch (error) {
                console.error('Erro ao buscar cidades:', error);
                document.getElementById('message').innerText = 'Erro ao buscar cidades: ' + error.message;
            }
        }

        function displayToken(token) {
            const dataDisplayDiv = document.getElementById('dataDisplay');
            dataDisplayDiv.innerHTML += `<h2>Token</h2><p>${token}</p>`;
        }

        function displayCities(cities) {
            const dataDisplayDiv = document.getElementById('dataDisplay');
            let tableHTML = '<h2>Cidades</h2><table><tr><th>ID</th><th>Nome</th></tr>';
            cities.forEach(city => {
                tableHTML += `<tr><td>${city.id}</td><td>${city.nome}</td></tr>`;
            });
            tableHTML += '</table>';
            dataDisplayDiv.innerHTML += tableHTML;
        }
    </script>

</body>
</html>
